// <auto-generated />
using System;
using JobSeekerSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobSeekerSystem.Migrations
{
    [DbContext(typeof(JobSeeker_DB))]
    [Migration("20250706150325_fix8")]
    partial class fix8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobSeekerSystem.Models.Classification", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("JobSeekerId")
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.JobSeeker", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Has_experience")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("JobSeekers");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.JobSeekerExperience", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Company_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("End_month")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<int>("End_year")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("JobSeekerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Job_title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Start_month")
                        .HasColumnType("int");

                    b.Property<int>("Start_year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerExperiences");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Program", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Resume", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Image_url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("JobSeekerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Resume_Skill", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("ResumeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("SkillId")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.HasIndex("SkillId");

                    b.ToTable("Resumes_Skills");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Skill", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProgramId")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.SubClassification", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("ClassificationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("JobSeekerId")
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("SubClassifications");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password_hash")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Update_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Classification", b =>
                {
                    b.HasOne("JobSeekerSystem.Models.JobSeeker", null)
                        .WithMany("Classifications")
                        .HasForeignKey("JobSeekerId");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.JobSeeker", b =>
                {
                    b.HasOne("JobSeekerSystem.Models.User", "User")
                        .WithOne("JobSeeker")
                        .HasForeignKey("JobSeekerSystem.Models.JobSeeker", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.JobSeekerExperience", b =>
                {
                    b.HasOne("JobSeekerSystem.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerExperiences")
                        .HasForeignKey("JobSeekerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Resume", b =>
                {
                    b.HasOne("JobSeekerSystem.Models.JobSeeker", "JobSeeker")
                        .WithMany("Resumes")
                        .HasForeignKey("JobSeekerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Resume_Skill", b =>
                {
                    b.HasOne("JobSeekerSystem.Models.Resume", "Resume")
                        .WithMany("Resume_Skills")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobSeekerSystem.Models.Skill", "Skill")
                        .WithMany("Resume_Skills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resume");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Student", b =>
                {
                    b.HasOne("JobSeekerSystem.Models.Program", "Program")
                        .WithMany("Students")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.SubClassification", b =>
                {
                    b.HasOne("JobSeekerSystem.Models.Classification", "Classification")
                        .WithMany("SubClassifications")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobSeekerSystem.Models.JobSeeker", null)
                        .WithMany("SubClassifications")
                        .HasForeignKey("JobSeekerId");

                    b.Navigation("Classification");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Classification", b =>
                {
                    b.Navigation("SubClassifications");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.JobSeeker", b =>
                {
                    b.Navigation("Classifications");

                    b.Navigation("JobSeekerExperiences");

                    b.Navigation("Resumes");

                    b.Navigation("SubClassifications");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Program", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Resume", b =>
                {
                    b.Navigation("Resume_Skills");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.Skill", b =>
                {
                    b.Navigation("Resume_Skills");
                });

            modelBuilder.Entity("JobSeekerSystem.Models.User", b =>
                {
                    b.Navigation("JobSeeker")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
